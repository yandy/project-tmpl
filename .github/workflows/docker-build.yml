name: Docker Build

on:
  schedule:
    - cron: '0 0 12 * *'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
    paths:
      - '.github/workflows/docker-build.yml'
      - '.docker-build/**/*'


env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io


jobs:

  cpp:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        img: [cpp-buildpack, cpp-runtime]
        os: [alpine, debian, redhat]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.img }}
          tags: |
            type=raw,value=${{ matrix.os }}

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .docker-build/${{ matrix.img }}
          file: .docker-build/${{ matrix.img }}/Dockerfile.${{ matrix.os }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository }}
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ github.repository }},mode=max
